/*
 * CSPAVolumeSupport.h - class defintion for Volume Support
 *
 *
 */

/* Generated by Together */

#ifndef CSPAVOLUMESUPPORT_HPP
#define CSPAVOLUMESUPPORT_HPP

#include "interface_api/IVolumeSupport.h"
#include "interface_api/SPAInterface.h"
#include "SPAstlmemory/SPANew.hxx"

class CSPAVolumeSupport : public IVolumeSupport 
{
public:

    SPA_DECLARE_NEW_DELETE( CSPAVolumeSupport )

	static IVolumeSupport* createInstance(SPA_TzVolumeSupport&  zVolumeSupport);

    static IVolumeSupport* getInstance();

    static void deleteInstance();

	/**
	 * Query the number of surfaces for the volume
	 * @param int iVolumeId, Volume Id
	 * @return int Number of faces in the volume */
    virtual int queryNumFaces(int iVolumeId);

	/** Query the faces of the volume.
	 * @param iVolumeId, Volume Id
	 * @param aiFaces[], Faces of the volume.
	 * @return Number of faces returned in aiFaces[]. */
	virtual int queryFaces(int iVolumeId, int aiFaces[]);

	virtual int queryAppId(int iVolumeId);

protected:

    CSPAVolumeSupport(SPA_TzVolumeSupport&  zVolumeSupport);

    virtual ~CSPAVolumeSupport(){}

private:

    static  CSPAVolumeSupport*  m_pzInstance;

	SPA_TzVolumeSupport&  m_zVolumeSupport;

    // CSPAFaceSupport( const CSPAFaceSupport &X){}

    CSPAVolumeSupport& operator= (
        const CSPAVolumeSupport &X){ return *this;}

};
#endif //VOLUMESUPPORTSPA_HPP

